#[derive(Debug)]
pub struct HighScores {
    scores: Vec<u32>,
}

impl HighScores {
    pub fn new(scores: &[u32]) -> Self {
        // Convert the slice to a Vec<u32>
        let scores_vec: Vec<u32> = scores.to_vec();
        
        HighScores { scores: scores_vec }
    }

    pub fn scores(&self) -> &[u32] {
        // Return the scores slice
        return &self.scores
    }

    pub fn latest(&self) -> Option<u32> {
    	todo!("Return the latest (last) score")
	return self.scores.last().cloned();    
    }

    pub fn personal_best(&self) -> Option<u32> {
        todo!("Return the highest score")
    }

    pub fn personal_top_three(&self) -> Vec<u32> {
        todo!("Return 3 highest scores")
    }
};
